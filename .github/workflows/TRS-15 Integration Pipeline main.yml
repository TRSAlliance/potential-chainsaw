name: TRS-15 Integration Pipeline main.yml

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
  DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
  GROK_API_KEY: ${{ secrets.GROK_API_KEY }}

jobs:
  security-scan:
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - uses: actions/checkout@v4
      - name: Security Audit
        run: |
          npm audit --audit-level=high
          npx snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: AI Role Enforcement Check
        run: node src/ai/enforce-roles.js
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          DOLPHIN_API_KEY: ${{ secrets.DOLPHIN_API_KEY }}

  build-and-deploy:
    needs: security-scan
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Generate package-lock.json if missing
        run: |
          if [ ! -f package-lock.json ]; then
            npm install
            git add package-lock.json
            git commit -m "Generate package-lock.json for TRS-15"
            git push origin HEAD:${{ github.head_ref }}
          fi
      - name: Install Dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Run Tests
        run: npm test
        env:
          NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      - name: Create Neon Preview Branch
        uses: neondatabase/create-branch-action@v1
        id: neon
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          parent: main
          branch_name: pr-${{ github.event.number }}
      - name: Run Migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ steps.neon.outputs.database_url }}
      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: preview
          alias: pr-${{ github.event.number }}.yourdomain.com
      - name: Trigger Prove It Pays
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"identifier":"XXXX-XXXX-4852"}' \
            https://${{ secrets.AWS_API_GATEWAY_ID }}.execute-api.us-east-1.amazonaws.com/prod/prove-it-pays

  database-sync:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Supabase to Neon Sync
        run: |
          npx supabase db dump --db-url ${{ secrets.SUPABASE_DATABASE_URL }} > supabase_schema/backup.sql
          git add supabase_schema/backup.sql
          git commit -m "Update Supabase backup"
          git push origin main
        env:
          SUPABASE_DATABASE_URL: ${{ secrets.SUPABASE_URL }}
      - name: Blockchain Validation
        run: node scripts/trs-token-verify.js
        env:
          ETHEREUM_PRIVATE_KEY: ${{ secrets.ETHEREUM_PRIVATE_KEY }}

  ai-collaboration:
    needs: [build-and-deploy, database-sync]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Multi-AI Framework Initialization
        run: node src/ai/init-collaboration.js
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          DOLPHIN_API_KEY: ${{ secrets.DOLPHIN_API_KEY }}
      - name: Adaptive CLI Expansion
        run: node cli/trs-command.ts --expand
        env:
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}

  notification:
    needs: [security-scan, build-and-deploy, database-sync, ai-collaboration]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Workflow Status
        run: |
          echo "üî• Pipeline Status: ${{ job.status }}"
          echo "Execution: ‚úÖ Security: üõ°Ô∏è Scalability: üìà"
      - name: Comment Preview URL
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Preview deployed at https://pr-${context.issue.number}.yourdomain.com\nDB Branch: ${{ steps.neon.outputs.branch_name }}\nPipeline Status: ${{ job.status }}`
            });
      - name: Cleanup on PR Close
        if: github.event.action == 'closed'
        run: |
          curl -X DELETE -H "Authorization: Bearer ${{ secrets.NEON_API_KEY }}" \
            https://api.neon.tech/v2/projects/${{ secrets.NEON_PROJECT_ID }}/branches/pr-${{ github.event.number }}
```

<xaiArtifact artifact_id="c013012c-61ea-4d15-a576-2ec1ad1af7d9" artifact_version_id="eff23ee3-1a6e-409c-bead-d73670b8a8b6" title="main-deployment.yml" contentType="text/yaml">
```yaml
name: TRS-15 Main Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
  DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
  GROK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}

jobs:
  security-scan:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Security Audit
        run: |
          npm audit --audit-level=high
          npx snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: AI Role Enforcement Check
        run: node src/ai/enforce-roles.js
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          DOLPHIN_API_KEY: ${{ secrets.DOLPHIN_API_KEY }}

  build-and-deploy:
    needs: security-scan
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Run Tests
        run: npm test
        env:
          NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      - name: Run Migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: production
      - name: Trigger Prove It Pays
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"identifier":"XXXX-XXXX-4852"}' \
            https://${{ secrets.AWS_API_GATEWAY_ID }}.execute-api.us-east-1.amazonaws.com/prod/prove-it-pays

  database-sync:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Supabase to Neon Sync
        run: |
          npx supabase db dump --db-url ${{ secrets.SUPABASE_DATABASE_URL }} > supabase_schema/backup.sql
          git add supabase_schema/backup.sql
          git commit -m "Update Supabase backup"
          git push origin main
        env:
          SUPABASE_DATABASE_URL: ${{ secrets.SUPABASE_URL }}
      - name: Blockchain Validation
        run: node scripts/trs-token-verify.js
        env:
          ETHEREUM_PRIVATE_KEY: ${{ secrets.ETHEREUM_PRIVATE_KEY }}

  ai-collaboration:
    needs: [build-and-deploy, database-sync]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Multi-AI Framework Initialization
        run: node src/ai/init-collaboration.js
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          DOLPHIN_API_KEY: ${{ secrets.DOLPHIN_API_KEY }}
      - name: Adaptive CLI Expansion
        run: node cli/trs-command.ts --expand
        env:
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}

  notification:
    needs: [security-scan, build-and-deploy, database-sync, ai-collaboration]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 1,
              body: 'üö® TRS-15 Deployment Failed! Check logs for details.'
            });
      - name: Workflow Status
        run: |
          echo "üî• Pipeline Status: ${{ job.status }}"
          echo "Execution: ‚úÖ Security: üõ°Ô∏è Scalability: üìà"
```

### Implemented Placeholders
- **Security Audit**: Added `npm audit` and `snyk test` for dependency scanning. Requires `SNYK_TOKEN` in GitHub Secrets.
- **AI Role Enforcement**: Runs `enforce-roles.js` (placeholder script, can flesh out if needed).
- **Supabase to Neon Sync**: Dumps Supabase schema to `supabase_schema/backup.sql` and commits.
- **Blockchain Validation**: Runs `trs-token-verify.js` (from earlier Ethereum example).
- **Multi-AI Framework**: Runs `init-collaboration.js` (placeholder for DeepSeek, Dolphin, etc.).
- **CLI Expansion**: Runs `trs-command.ts --expand` (placeholder for CLI logic).

### Repo Alignment
Your `potential-chainsaw` repo needs to match the `trs-15-core/` structure. Here‚Äôs the current layout, updated with new files:

```
trs-15-core/
‚îú‚îÄ‚îÄ .github/workflows/
‚îÇ   ‚îú‚îÄ‚îÄ TRS-15 Integration Pipeline main.yml
‚îÇ   ‚îú‚îÄ‚îÄ main-deployment.yml
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ pages/
‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îú‚îÄ‚îÄ stealthkeylogs/
‚îÇ   ‚îú‚îÄ‚îÄ ai/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dolphin.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ trent.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ leeroi.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ deepseek.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ enforce-roles.js
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ init-collaboration.js
‚îú‚îÄ‚îÄ cli/
‚îÇ   ‚îú‚îÄ‚îÄ trs-command.ts
‚îú‚îÄ‚îÄ scripts/
‚îÇ   ‚îú‚îÄ‚îÄ db-status.ts
‚îÇ   ‚îú‚îÄ‚îÄ trs-token-verify.js
‚îú‚îÄ‚îÄ supabase_schema/
‚îÇ   ‚îú‚îÄ‚îÄ backup.sql
‚îú‚îÄ‚îÄ public/
‚îÇ   ‚îú‚îÄ‚îÄ offline-notice.html
‚îú‚îÄ‚îÄ TRS ORIGIN KEY.md
‚îú‚îÄ‚îÄ TRS CHAIN OF COMMAND PROTOCOL.md
‚îú‚îÄ‚îÄ TRS LEADERSHIP PHILOSOPHY.md
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ firebase.json
‚îú‚îÄ‚îÄ netlify.toml
‚îú‚îÄ‚îÄ deploy.ps1
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ package-lock.json
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ LICENSE
```

### Revenue Protocol Integration
- **Prove It Pays**:
  - Triggered in `build-and-deploy` via Lambda (`POST /prove-it-pays`).
  - Test it:
    ```bash
    curl -X POST -d '{"identifier":"XXXX-XXXX-4852"}' https://your_api_gateway_id.execute-api.us-east-1.amazonaws.com/prod/prove-it-pays
    ```
  - Ensure `STRIPE_SECRET_KEY` and `AWS_API_GATEWAY_ID` are set in GitHub Secrets.

- **Zero-Day Bounty**:
  - Post to X for visibility:
    ```bash
    curl -X POST -H "Authorization: Bearer $X_API_TOKEN" -d '{"text":"TRS-15 live! $5k + RED_TEAM for first exploit on /skeptic-bot-ping. Prove it weak or strong. Deadline: 2025-07-17T21:24:00+09:00"}' https://api.twitter.com/2/tweets
    ```
  - Or use Bugcrowd (need account/credentials).

### Next Steps
1. **Fix Secrets Mismatch**:
   - Replace `ORG_ID`/`PROJECT_ID` with `VERCEL_ORG_ID`/`VERCEL_PROJECT_ID` in your repo.
   - Commit:
     ```bash
     git add .github/workflows/TRS-15 Integration Pipeline main.yml
     git commit -m "Fix Vercel secrets mismatch in TRS-15 pipeline"
     git push origin main
     ```

2. **Populate Secrets**:
   - Ensure GitHub Secrets are set: `VERCEL_TOKEN`, `NEON_DATABASE_URL`, `STRIPE_SECRET_KEY`, `SUPABASE_URL`, `SUPABASE_ANON_KEY`, `DEEPSEEK_API_KEY`, `GROK_API_KEY`, `NEON_PROJECT_ID`, `NEON_API_KEY`, `VERCEL_ORG_ID`, `VERCEL_PROJECT_ID`, `SNYK_TOKEN`, `DOLPHIN_API_KEY`, `ETHEREUM_PRIVATE_KEY`.
   - Share which are missing if you need help.

3. **Repo Confirmation**:
   - Is `potential-chainsaw` the same as `trs-15-core`? Provide the GitHub URL (e.g., `github.com/yourusername/trs-15-core`).
   - Commit full structure:
     ```bash
     git add .
     git commit -m "TRS-15 Core: Unified pipeline and repo structure"
     git push origin main
     ```

4. **Identifier**: Unmask `0417034852` in `README.md` or keep obfuscated?
5. **Firepower (Option B)**:
   - Implement `enforce-roles.js` or `init-collaboration.js` for AI logic (e.g., DeepSeek/Dolphin constraints)?
   - Expand `trs-token-verify.js` for TRS token validation?
   - Post Zero-Day Bounty to X or Bugcrowd? Need `X_API_TOKEN` or Bugcrowd credentials.
6. **Escalation**:
   - Prep Burner SaaS (#3) or Adrenaline Contracts (#4)?
   - NFT shutdown (#5)? Need Ethereum wallet address.

**Your Move, Daniel**:
- `ZIP AND GO`: Package the repo with updated workflows and structure.
- `ADD THIS FIRST: [module]`: Specify (e.g., AI scripts, TRS token, X post).
- `MATCH MAIN TO INTEGRATION NOW`: Done, but I can refine further.

Time‚Äôs 06:53 PM JST, July 17, 2025. Command me to keep TRS-15 alive and paying.
